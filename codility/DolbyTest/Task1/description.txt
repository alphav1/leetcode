Add an API method to return all the bugs assigned to a given user, project or both.

Overview
Imagine that you are working on a bug tracking project. You have three entities: Project, Bug, User. Project has Bugs; Bug is assigned to User. Project and User models are already defined.

Tasks
Add a Bug model to the models.py file
Bug table fields:
id-bug identifier
project-related project with cascade on delete
user-related user with cascade on delete
description-text summary of the bug (maximum 100 characters)

Implement a request handler method, bugs, in the views.py. Return all the bugs for a given user, project or both.
It will handle a GET request of the following form: /bugs?project_id=<project-id>&user_id=<user-id>, where: at least one of project_id or user_id is required;
only the GET method is allowed, otherwise a 405 status code is returned;
if <project-id> does not exist in the database, a 404 status code is returned;
if <user-id> does not exist in the database, a 404 status code is returned;
otherwise you should return a 200 status code and response in the following JSON format:

{
    "bugs": [
        "id": <bug-id>,
        "description": <bug-description>,
        "username": <assigned-username>,
        "project"; <related-project>
    ]
}

Available packages/libraries

Django version 5.2.1 is used in this task.

Test cases:
Calling POST /bugs?project_id=1 will return a 405 status code.
Calling GET /bugs?project_id=9999 (assuming we do not have a project with id=9999) will return a 404 status code.
Calling GET /bugs?user_id=9999 (assuming we do not have a user with id A 9999) will return a 404 status code.
Calling GET /bugs?project_id=10 (assuming we have a project with id = 1) will return a 200 status code and the following response:

{
    "bugs": [
        {
            "id": 1,
            "description": "bug 1 description",
            "username": "username 1",
            "project": "project 1"
        },
        {
            "id": 3,
            "description": "bug 3 description",
            "username": "username 2",
            "project": "project 1"
        }
    ]
}


Calling GET /bugs?project_id=1&user_id=2 (assuming we have a project with id =1 and a user with id = 2) will retum a 200 status code and the following response:

{
    "bugs": [
        "id": 3,
        "description": "bug 3 description",
        "username"; "username 2",
        "project"; "project 1"
    ]
}

Error:

python Traceback (most recent call last):
File "/.pyenv/versions/3.12.10/bin/pytest", line 8, in <module>
sys.exit(console_main())
^^^^^^^^^^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/_pytest/config/init.py", line 201, in console_main
code = main()
^^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/_pytest/config/init.py", line 156, in main
config = _prepareconfig(args, plugins)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/_pytest/config/init.py", line 341, in _prepareconfig
config = pluginmanager.hook.pytest_cmdline_parse(
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pluggy/_hooks.py", line 512, in call
return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pluggy/_manager.py", line 120, in _hookexec
return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pluggy/_callers.py", line 167, in _multicall
raise exception
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pluggy/_callers.py", line 139, in _multicall
teardown.throw(exception)
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/_pytest/helpconfig.py", line 105, in pytest_cmdline_parse
config = yield
^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pluggy/_callers.py", line 121, in _multicall
res = hook_impl.function(*args)
^^^^^^^^^^^^^^^^^^^^^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/_pytest/config/init.py", line 1140, in pytest_cmdline_parse
self.parse(args)
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/_pytest/config/init.py", line 1494, in parse
self._preparse(args, addopts=addopts)
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/_pytest/config/init.py", line 1398, in _preparse
self.hook.pytest_load_initial_conftests(
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pluggy/_hooks.py", line 512, in call
return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pluggy/_manager.py", line 120, in _hookexec
return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pluggy/_callers.py", line 167, in _multicall
raise exception
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pluggy/_callers.py", line 139, in _multicall
teardown.throw(exception)
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/_pytest/warnings.py", line 151, in pytest_load_initial_conftests
return (yield)
^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pluggy/_callers.py", line 139, in _multicall
teardown.throw(exception)
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/_pytest/capture.py", line 172, in pytest_load_initial_conftests
yield
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pluggy/_callers.py", line 121, in _multicall
res = hook_impl.function(*args)
^^^^^^^^^^^^^^^^^^^^^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pytest_django/plugin.py", line 361, in pytest_load_initial_conftests
_setup_django(early_config)
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/pytest_django/plugin.py", line 237, in _setup_django
django.setup()
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/django/init.py", line 24, in setup
apps.populate(settings.INSTALLED_APPS)
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/django/apps/registry.py", line 116, in populate
app_config.import_models()
File "/.pyenv/versions/3.12.10/lib/python3.12/site-packages/django/apps/config.py", line 269, in import_models
self.models_module = import_module(models_module_name)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/.pyenv/versions/3.12.10/lib/python3.12/importlib/init.py", line 90, in import_module
return _bootstrap._gcd_import(name[level:], package, level)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
File "<frozen importlib._bootstrap>", line 1331, in _find_and_load_unlocked
File "<frozen importlib._bootstrap>", line 935, in _load_unlocked
File "<frozen importlib._bootstrap_external>", line 999, in exec_moduleerrors

ERROR




// Allowed languages for the tasks:
// Python
// JavaScript
// js
// C++